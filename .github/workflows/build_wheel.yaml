name: Attach fib-pyrs wheel to Release
on: [push]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-wasm-wheel:
    # Pyodide began supporting micropip.install from emscripten-compiled binary wheels
    # in Pyodide 0.21.0 (Aug 2022), so no need to build wheels for versions before then.
    # As of Nov 2022, the matrix for emscripten/python versions since then is simple. 
    # Update this matrix when new Pyodide versions come out that bump the Python interpreter
    # or emscripten version. Ref: https://pyodide.org/en/stable/project/changelog.html
    strategy:
      matrix:
        python-version: ["3.10.2"]
        emscripten-version: ["3.1.14"]
      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Python version
        run: python --version

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.1.11'

      - name: Poetry install venv
        run: poetry install
        working-directory: ./fib-pyrs

      - name: Poetry version
        run: poetry debug
        working-directory: ./fib-pyrs
        
      - name: Maturin version
        run: poetry run maturin --version
        working-directory: ./fib-pyrs

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            # maturin build will generate args -Z link-native-libraries=no which is only accepted on nightly compiler
            toolchain: nightly
            profile: minimal
            override: true
      
      - name: Rust version
        run: rustup -V

      - name: Rustup add wasm32 target
        run: rustup target add wasm32-unknown-emscripten

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v11
        with: 
          version: ${{ matrix.emscripten-version }}
       
      - name: emsdk version
        run: emcc -v

      - name: Build WASM wheel
        run: poetry run maturin build --target wasm32-unknown-emscripten --release --interpreter python${{ matrix.python-version }}
        working-directory: ./fib-pyrs

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wasm-wheels
          path: ./fib-pyrs/target/wheels

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
     - build-wasm-wheel
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wasm-wheels

      - name: Attach assets to Release
        uses: softprops/action-gh-release@v1
        
        with:
          files: ./fib-pyrs/target/wheels/*.whl
        
      


